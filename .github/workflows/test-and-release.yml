name: Test and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t k8mpatible-action .

      - name: Test Docker image
        run: |
          docker run --rm k8mpatible-action "1.28.0" "" "true" "table" "false"
          echo "Docker image test passed"

  release:
    if: github.event_name == 'release'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update major version tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tagName = context.payload.release.tag_name;
            const majorVersion = tagName.split('.')[0];
            
            // Delete the major version tag if it exists
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${majorVersion}`
              });
            } catch (e) {
              console.log(`Tag ${majorVersion} doesn't exist yet or couldn't be deleted: ${e.message}`);
            }
            
            // Get the SHA of the current tag
            const { data: refData } = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${tagName}`
            });
            
            // Create the major version tag
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${majorVersion}`,
              sha: refData.object.sha
            });
            
            console.log(`Created or updated major version tag: ${majorVersion}`);
